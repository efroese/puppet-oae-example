#!/bin/bash
#
# run_sis_batch.sh
# - Run the rSmart basic SIS batch job
# 
# Erik Froese <erik@hallwaytech.com>
#
# file managed by puppet.
# See https://github.com/rSmart/puppet-oae/modules/sis/templates/run_sis_batch.sh
#

SIS_BATCH_HOME=<%= scope.lookupvar('sis::batch::home') %>
SIS_JAR=${SIS_BATCH_HOME}/<%= scope.lookupvar('sis::batch::artifact') %>
EMAIL_RECIPIENT="<%= scope.lookupvar('sis::batch::email_report') %>"

CSV_DIR=<%= scope.lookupvar('sis::batch::csv_dir') %>
CSV_SCHOOLS="<% scope.lookupvar('sis::batch::school_properties').keys.each do |school| -%><%= school %> <% end -%>"
CSV_OBJECT_TYPES="<% scope.lookupvar('sis::batch::csv_object_types').each do |cot| -%><%= cot %> <% end -%>"

GLOBAL_JAVA_OPTS="${JAVA_OPTS} -Dsis.config.file=${SIS_BATCH_HOME}/sis.properties "

NOW=`date +%Y%m%d-%H%M`

OUTPUT=`mktemp`
#
# Run the batch processor for a single school.
#
# $1 school name
# $2 JAVA_OPTS
# 
function do_batch(){

    $school = $1
    $java_opts = $2

    # Collect the list of filenames
    FILENAME_OPTS=""
    for file in $CSV_OBJECT_TYPES; do
        CSV_FILE="${CSV_DIR}/${file}.${school}.csv"
        if [[ -f ${CSV_FILE} ]]; then
            FILENAME_OPTS="${FILENAME_OPTS} -Dfilename@com.rsmart.customer.integration.processor.cle.Cle${file}Processor=${CSV_FILE}" 
            echo "processing file: ${CSV_FILE}" | tee -a ${OUTPUT}
        else
            echo "No file for ${CSV_FILE}" | tee -a ${OUTPUT}
        fi
    done

    # TODO - What consitutes an error?
    ERROR=""

    # Run the importer
    java ${java_opts} ${FILENAME_OPTS} -jar ${SIS_JAR} 2>&1 | tee -a ${OUTPUT}
}

<% scope.lookupvar('sis::batch::school_properties').keys.each do |school| -%>

JAVA_OPTS=${GLOBAL_JAVA_OPTS}
<% scope.lookupvar('sis::batch::school_properties')[school]['oae_batch_params'].sort.each do |key,val| -%>
JAVA_OPTS="${JAVA_OPTS} -D<%= key %>='<%= val %>' "
<% end %>

do_batch <%= school %> $JAVA_OPTS

<% end %>

if [[ $EMAIL_RECIPIENT != "undefined" ]]; then
    mail -s "SIS batch update for ${NOW}" ${EMAIL_RECIPIENT} < ${OUTPUT}
fi
rm -f $OUTPUT
