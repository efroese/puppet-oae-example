#!/bin/bash

#
# run_sis_batch.sh
# - Run the rSmart basic SIS batch job
# 
# Erik Froese <erik@hallwaytech.com>
#

# file managed by puppet.
# See https://github.com/rSmart/puppet-oae/modules/sis/templates/run_sis_batch.sh

SIS_BATCH_HOME=<%= scope.lookupvar('sis::batch::home') %>
SIS_JAR=${SIS_BATCH_HOME}/<%= scope.lookupvar('sis::batch::artifact') %>
EMAIL_RECIPIENT="<%= scope.lookupvar('sis::batch::email_report') %>"

CSV_DIR=<%= scope.lookupvar('sis::batch::csv_dir') %>
CSV_SCHOOLS="<%= scope.lookupvar('sis::batch::csv_schools').each do |school_array| print "#{school_array[1]} " end %>"

JAVA_OPTS=" -Doae.server.url=<%= scope.lookupvar('sis::batch::server_url') %> "
JAVA_OPTS=" ${JAVA_OPTS} -Doae.admin.user=<%= scope.lookupvar('sis::batch::oae_user') %> "
JAVA_OPTS=" ${JAVA_OPTS} -Doae.admin.password=<%= scope.lookupvar('sis::batch::oae_password') %> "
JAVA_OPTS=" ${JAVA_OPTS} -DdateFormat@com.rsmart.customer.integration.processor.cle.CleCourseProcessor=yyyy-mm-dd "

<% if scope.lookupvar('sis::batch::sis_properties') -%>
JAVA_OPTS="${JAVA_OPTS} -Dsis.config.file=${SIS_BATCH_HOME}/sis.properties "
<% end -%>

NOW=`date +%Y%m%d-%H%M`
CSV_ARCHIVE=${CSV_DIR}/${NOW}
mkdir -p ${CSV_ARCHIVE}

OUTPUT=`mktemp`

for school in ${CSV_SCHOOLS}; do
    FILENAME_OPTS="";
    for file in Course Membership User Section SectionMembership; do
        CSV_FILE="${CSV_DIR}/${file}.${school}.csv"
        if [[ -f ${CSV_FILE} ]]; then
            FILENAME_OPTS="${FILENAME_OPTS} -Dfilename@com.rsmart.customer.integration.processor.cle.Cle${file}Processor=${CSV_FILE}" 
        else
            echo "No file for ${CSV_FILE}" >> ${OUTPUT}
        fi
    done

    # TODO - What consitutes an error?
    ERROR=false

    # Run the importer
    java ${JAVA_OPTS} ${FILENAME_OPTS} -jar ${SIS_JAR} 2>&1 >> ${OUTPUT}

    if [[ ! ${ERROR} ]]; then
        for file in Course Membership User Section SectionMembership; do
            CSV_FILE="${CSV_DIR}/${file}.${school}.csv"
            if [[ -f ${CSV_FILE} ]]; then
                mv ${CSV_FILE} ${CSV_ARCHIVE}
            fi
        done
    fi
done

if [[ $EMAIL_RECIPIENT != "undefined" ]]; then
    mail -s "SIS batch update for ${NOW}" ${EMAIL_RECIPIENT} < ${OUTPUT}
fi
rm -f $OUTPUT
